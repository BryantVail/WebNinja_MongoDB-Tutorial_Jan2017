2 directories need to be made for MongoDB
    1. c:/data
    2. c:/data/db

run:    mongod.exe*
    This starts the service

mongoose install
npm init

//end       video 2
//start     video 3
    Connect to Mongo
        mongoose.connect("mongodb://localhost/shirtOrderLocal");
        //if directory used does not exist, the directory will be created to be used
        //.once == eventListener

//end       video 3
//start     video 4

const PrintedItemSchema = new Schema({...});
const PrintedItem = mongoose.Model("PrintedItem",PrintedItemSchema);

module.exports = PrintedItem;

mongoose.connect(uri, options, function(error) {
  // Check error in initial connection. There is no 2nd param to the callback.
});

// Or using promises
mongoose.connect(uri, options).then(
  () => { /** ready to use. The `mongoose.connect()` promise resolves to undefined. */ },
  err => { /** handle initial connection error */ }
);

//end       video 4
//start     video 5

    Mocha Testing Framework

    //"./Test/MongoDB_tests.js"

    //MongoDB_test.js
    const Mocha         = require("mocha");

    //describe tests
    describe("saving to DBase", function(){
        //create tests
    });

    "it" blocks

    callbacks:
        function readJSON(filename, callback){
            fs.readFile(filename, 'utf8', function (err, res){
                if (err) return callback(err);
                callback(null, JSON.parse(res));
        });
}

//end 1-6 Mocha
//start 1-7 ES6 Promises

    mocha hooks
        a function which tells mocha to run a section of code before/after the test (for environment purposes).

